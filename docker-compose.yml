version: "3.2"

#设置网络
networks:
  app-net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16

services:

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/log:/var/log/nginx
      - ${WEB_ROOT_PATH}:/var/www
    depends_on:
      - php-fpm-8.1
      - mysql
      - redis
    networks:
      app-net:
        ipv4_address: 10.5.0.5

  php-fpm-7.4:
    container_name: php-pfm-7.4
    build:
      context: ./php-fpm/conf-7.4
    ports:
      - 9001:9000
    volumes:
      - ./php-fpm/conf-7.4/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/conf-7.4/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/conf-7.4/php-fpm.d:/usr/local/etc/php-fpm.d
      - ${WEB_ROOT_PATH}:/var/www
    networks:
      app-net:
        ipv4_address: 10.5.0.6
    extra_hosts:
      ad.zl.test: 10.5.0.5
      api.zl.test: 10.5.0.5

  php-fpm-8.1:
    container_name: php-pfm-8.1
    build:
      context: ./php-fpm/conf-8.1
    ports:
      - 9002:9000
    volumes:
      - ./php-fpm/conf-8.1/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/conf-8.1/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./php-fpm/conf-8.1/php-fpm.d:/usr/local/etc/php-fpm.d
      - ${WEB_ROOT_PATH}:/var/www
    networks:
      app-net:
        ipv4_address: 10.5.0.7
    extra_hosts:
      ad.zl.test: 10.5.0.5
      api.zl.test: 10.5.0.5

  mysql:
    container_name: mysql
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    command:
      --default-authentication-plugin=mysql_native_password
      --max_allowed_packet=200M
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    networks:
      app-net:
        ipv4_address: 10.5.0.8

  mongo:
    container_name: mongo
    build:
      context: ./mongo
      args:
        - MONGO_VERSION=${MONGO_VERSION}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./mongo/data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      app-net:
        ipv4_address: 10.5.0.9

  redis:
    container_name: redis
    build:
      context: ./redis
      args:
        - REDIS_VERSION=${REDIS_VERSION}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./redis/data:/data
    restart: always
    networks:
      app-net:
        ipv4_address: 10.5.0.10

  memcached:
    container_name: memcached
    build:
      context: ./memcached
      args:
        - MEMCACHED_VERSION=${MEMCACHED_VERSION}
    ports:
      - ${MEMCACHED_PORT}:11211
    networks:
      app-net:
        ipv4_address: 10.5.0.11